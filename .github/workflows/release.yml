on:
  push:
    branches:
      - main

name: AWS Common Utilities Release Pipeline

env:
  name: AWS Common Utilities Release Pipeline

jobs:
  build:
    name: Build Package(s)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.x, 14.x ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Yarn
        run: npm install -g yarn
      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ github.ref }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install Packages
        run: yarn install --frozen-lockfile
      - name: Build Packages
        run: yarn build
      - name: Validate Documentation
        run: yarn docs

  test:
    name: Test Package(s)
    if: ${{ success() }}
    runs-on: ubuntu-latest
    needs: [ build ]
    strategy:
      matrix:
        node-version: [ 12.x, 14.x ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Yarn
        run: npm install -g yarn
      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ github.ref }}-${{ env.cache-name }}-${{ hashFiles('build/**/*.js') }}
      - name: Install Packages
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Build Packages
        run: yarn build
      - name: Test Packages
        run: yarn validate
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: coverage/*.xml

  release:
    name: Release Package(s)
    if: ${{ success() }}
    runs-on: ubuntu-latest
    needs: [ build, test ]
    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      GITHUB_PUBLISH_TOKEN: ${{ secrets.GIT_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Yarn
        run: npm install -g yarn
      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ github.ref }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install Packages
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Build Packages
        run: yarn build
      - name: Validate Documentation
        run: yarn docs
      - name: Set NPM Auth
        run: echo "//npm.pkg.github.com/:_authToken=${GITHUB_PUBLISH_TOKEN}" >> .npmrc
      - name: Deploy Package(s)
        run: npm publish
      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ env.GITHUB_PUBLISH_TOKEN }}
          publish_dir: ./docs

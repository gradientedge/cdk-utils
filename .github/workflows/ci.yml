on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: CI-Pipeline

env:
  name: CI-Pipeline
  NODE_OPTIONS: --max_old_space_size=7168

jobs:
  validate:
    name: Build & Test Package(s)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
        terraform-version: [1.3.9]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup Environment
        id: setup-environment
        uses: ./.github/actions/setup-env
      - name: Setup Terraform ${{ matrix.terraform-version }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform-version }}
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-dependencies
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ./node_modules
            ./app/api-destined-function/node_modules
          key: ${{ runner.os }}-${{ github.ref }}-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install Packages
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile
      - name: Build Applications
        id: build-applications
        uses: ./.github/actions/build
        with:
          use-cache: steps.cache-dependencies.outputs.cache-hit
      - name: Test Applications
        id: test-applications
        uses: ./.github/actions/test
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: ${{ github.event_name == 'push' && success() }}
        with:
          junit_files: coverage/junit.xml
      # - name: Publish Code Coverage
      #   run: npx codecov
      - uses: actions/upload-artifact@v4
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && success() }}
        with:
          name: docs-artifact
          path: ./api-docs/

  release:
    name: Release Package(s)
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && success() }}
    runs-on: ubuntu-latest
    needs: [validate]
    strategy:
      matrix:
        node-version: [22.x]
    env:
      GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.GIT_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup Environment
        id: setup-environment
        uses: ./.github/actions/setup-env
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-dependencies
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ./node_modules
            ./app/api-destined-function/node_modules
          key: ${{ runner.os }}-${{ github.ref }}-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: actions/download-artifact@v5
        with:
          name: docs-artifact
          path: ./api-docs/
      - name: Build Production
        run: pnpm build:production
      - name: Deploy Package(s)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./api-docs
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            docs-artifact
          failOnError: false
